digraph G
{
  edge [fontname="FreeSans.ttf",fontsize=10,labelfontname="FreeSans.ttf",labelfontsize=10];
  node [fontname="FreeSans.ttf",fontsize=10,shape=record];
  Node1 [label="{TPenValue\n|# cvColor\l# ivSize\l# ivStyle\l# s_penList\l# s_penSizeList\l# s_penStyleList\l# s_defaultPen\l# s_showExpandables\l|+ TPenValue()\l+ TPenValue()\l+ ~TPenValue()\l+ ItemID()\l+ pen()\l# construct()\l# doUpdateFromChild()\l# doUpdateChildren()\l# doCreateChildren()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans.ttf"];
  Node2 [label="{TListValue\n|# m_useOwnText\l# m_allowListAppend\l# s_useOwnText\l# s_allowListAppend\l|+ TListValue()\l+ TListValue()\l+ ~TListValue()\l+ allowOwnValues()\l+ isOwnValues()\l+ allowListAppending()\l+ isListAppending()\l+ setValue()\l+ ItemID()\l+ setDefaultUseOwnValues()\l+ setDefaultAllowListAppending()\l# validate()\l# setCurrentItem()\l# appendValue()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTListValue.html",tooltip="Represents common value item with list support. May be used directly with TItemList..."];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans.ttf"];
  Node3 [label="{TBaseListValue\n|# m_list\l|+ TBaseListValue()\l+ TBaseListValue()\l+ ~TBaseListValue()\l+ list()\l+ setValue()\l+ ItemID()\l+ setList()\l# validate()\l# fillEditor()\l# setCurrentItem()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTBaseListValue.html",tooltip="Represents abstract value item with list support. Should not be used directly."];
  Node4 -> Node3 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans.ttf"];
  Node4 [label="{TBaseValue\n|# m_set\l# m_storedSet\l# m_child\l# m_editor\l# m_validator\l# m_buttonEditor\l# m_wasChanged\l# m_SpecialsAllowed\l# m_childLock\l# m_item\l# m_linked\l# m_propertyType\l# m_propertyName\l# m_expandables\l# m_exp_created\l# m_children\l|+ TBaseValue()\l+ TBaseValue()\l+ ~TBaseValue()\l+ setValue()\l+ setSpecial()\l+ value()\l+ valueText()\l+ variant()\l+ number()\l+ numberF()\l+ string()\l+ writeValue()\l+ writeValue()\l+ writeValue()\l+ writeValue()\l+ ItemID()\l+ editable()\l+ setVisible()\l+ hasValue()\l+ validator()\l+ setValidator()\l+ setButtonEditor()\l+ buttonEditor()\l+ storeSet()\l+ restoreSet()\l+ valueChanged()\l+ allowSpecials()\l+ isSpecialsAllowed()\l+ setPropertyName()\l+ properyName()\l+ setLinked()\l+ updateFromLinked()\l+ updateLinked()\l+ writeDataSet()\l+ readDataSet()\l+ showChildren()\l+ onEnterItem()\l+ setCurrentItem()\l+ onLeaveItem()\l# setupValue()\l# valuePicked()\l# validate()\l# createEditor()\l# fillEditor()\l# updateEditorGeometry()\l# paint()\l# doUpdateLinked()\l# doUpdateFromLinked()\l# updateFromChild()\l# doUpdateFromChild()\l# updateChildren()\l# doUpdateChildren()\l# doCreateChildren()\l# registerChild()\l# doShowChildren()\l# setChildMode()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTBaseValue.html",tooltip="A base class for items which provide editable values. Internally it provides support..."];
  Node5 -> Node4 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans.ttf"];
  Node5 [label="{TBaseItem\n|+ id\l# m_page\l# m_hint\l# m_check\l# m_storedCheck\l# m_visible\l# m_checkPropertyName\l# m_checkLinked\l# m_checkLinkedType\l# s_defaultPage\l|+ TBaseItem()\l+ TBaseItem()\l+ ~TBaseItem()\l+ setCheckable()\l+ setChecked()\l+ setEnabled()\l+ setVisible()\l+ setExpanded()\l+ hint()\l+ setHint()\l+ browser()\l+ page()\l+ ItemID()\l+ editable()\l+ visible()\l+ hasValue()\l+ storeSet()\l+ restoreSet()\l+ setCheckPropertyName()\l+ checkProperyName()\l+ setCheckLinked()\l+ addCheckProperty()\l+ updateFromLinked()\l+ updateLinked()\l+ writeDataSet()\l+ readDataSet()\l+ setItemLevel()\l# init()\l# onEnterItem()\l# onLeaveItem()\l# onClickItem()\l# onChangeItem()\l# updateCheckState()\l# setup()\l# paint()\l# drawDisplay()\l# itemIcon()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTBaseItem.html",tooltip="A base class for Value Browser items. Should not be used directly."];
  Node6 -> Node4 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="m_validator",arrowtail="open",fontname="FreeSans.ttf"];
  Node6 [label="{TValueValidator\n||+ TValueValidator()\l+ ~TValueValidator()\l+ checkValue()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTValueValidator.html",tooltip="Abstract class which is used as the base for all value validators."];
  Node7 -> Node4 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="m_storedSet\nm_set",arrowtail="open",fontname="FreeSans.ttf"];
  Node7 [label="{SValue\n|+ type\l+ value\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structSValue.html",tooltip="Struct SValue holds a value as QVariant and its flags."];
  Node8 -> Node4 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="m_item",arrowtail="open",fontname="FreeSans.ttf"];
  Node8 [label="{TItem\n|+ value\l+ icon\l+ text\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTItem.html",tooltip="A common item representing one item in drop-down list of value editor."];
  Node9 -> Node3 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="m_list",arrowtail="open",fontname="FreeSans.ttf"];
  Node9 [label="{TItemList\n|# m_destroyPixmaps\l|+ TItemList()\l+ TItemList()\l+ TItemList()\l+ ~TItemList()\l+ setItem()\l+ findItem()\l+ findItemByText()\l+ operator\<\<()\l+ operator\<\<()\l+ operator\<\<()\l+ operator\<\<()\l+ operator\<\<()\l+ operator\<\<()\l+ paintComboItem()\l+ compareComboItem()\l+ highlightComboItem()\l+ sizeHintComboItem()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTItemList.html",tooltip="A common list of TItem items."];
  Node10 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="s_penList",arrowtail="open",fontname="FreeSans.ttf"];
  Node10 [label="{TPenList\n|# m_penSizeList\l|+ TPenList()\l+ setItem()\l+ defaultPenSizeList()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTPenList.html",tooltip="A common list of pen values."];
  Node9 -> Node10 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans.ttf"];
  Node9 -> Node10 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="m_penSizeList",arrowtail="open",fontname="FreeSans.ttf"];
  Node2 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="ivStyle\nivSize",arrowtail="open",fontname="FreeSans.ttf"];
  Node9 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="s_penStyleList\ns_penSizeList",arrowtail="open",fontname="FreeSans.ttf"];
  Node11 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="cvColor",arrowtail="open",fontname="FreeSans.ttf"];
  Node11 [label="{TColorValue\n|+ s_ColorButtonEditor\l+ s_ColorComboEditor\l# m_icon\l# ivRed\l# ivGreen\l# ivBlue\l# s_colorList\l# s_useOwnText\l# s_allowListAppend\l# s_showExpandables\l|+ TColorValue()\l+ TColorValue()\l+ ~TColorValue()\l+ color()\l+ writeValue()\l+ writeDataSet()\l+ ItemID()\l+ setDefaultColorList()\l+ setDefaultUseOwnValues()\l+ setDefaultAllowListAppending()\l+ setDefaultExpandableItems()\l# setupValue()\l# updateEditorGeometry()\l# fillEditor()\l# appendValue()\l# itemIcon()\l# construct()\l# doUpdateFromChild()\l# doUpdateChildren()\l# doCreateChildren()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTColorValue.html",tooltip="A color value class which allows to store color values as QColor."];
  Node2 -> Node11 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans.ttf"];
  Node12 -> Node11 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="s_colorList",arrowtail="open",fontname="FreeSans.ttf"];
  Node12 [label="{TColorList\n|# m_regColorList\l# m_baseColorList\l|+ TColorList()\l+ setItem()\l+ findItem()\l+ registeredColorList()\l+ baseColorList()\l+ makeIcon()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTColorList.html",tooltip="A common list of color values."];
  Node9 -> Node12 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans.ttf"];
  Node12 -> Node12 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="m_regColorList\nm_baseColorList",arrowtail="open",fontname="FreeSans.ttf"];
}
